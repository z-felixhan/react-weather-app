{"version":3,"sources":["components/form.jsx","components/weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","error","onSubmit","getWeather","type","name","autoComplete","placeholder","minmaxTemp","min","max","Weather","location","src","icon","alt","description","temp","temp_min","temp_max","App","e","a","preventDefault","city","target","elements","value","country","fetch","req","json","res","console","log","setState","weather","toUpperCase","sys","main","state","undefined","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebe44919.chunk.js","sourcesContent":["import \"./form.css\"\nimport React from 'react';\n\nconst Form = props => {\n    return (\n        <div className=\"container\">\n            <div>{props.error ? error() : null}</div>\n            <form onSubmit={props.getWeather}>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <input type=\"text\" name=\"city\" autoComplete=\"off\" placeholder=\"City\" />\n                    </div>\n                    <div className=\"col\">\n                        <input type=\"text\" name=\"country\" autoComplete=\"off\" placeholder=\"Country\" />\n                    </div>\n                </div>\n                <button className=\"btn\">Get Weather</button>\n            </form>\n        </div>\n    );\n}\n\nfunction error () {\n    return (\n        <div>\n            Please enter city and country.\n        </div>\n    );\n}\n\nexport default Form;","import \"./weather.css\";\nimport React from \"react\";\n\nconst Weather = (props) => {\n    return (\n        <div className=\"container\">\n            <div>\n                <h1 className=\"location\">{props.location}</h1>\n                <h5 className=\"weather-icon\">\n                    <img src={\"http://openweathermap.org/img/wn/\" + props.icon + \"@2x.png\"} alt=\"\" />\n                </h5>\n                <h4 className=\"description\">{props.description}</h4>\n                <h1 className=\"temp\">{props.temp}</h1>\n                {minmaxTemp(props.temp_min, props.temp_max)}\n            </div>\n        </div>\n    );\n};\n\n\nconst minmaxTemp = (min, max) => {\n    return (\n        <h3 className=\"minmaxTemp\">\n            <span>{min}</span>\n            <span>{max}</span>\n        </h3>\n    );\n};\n\n\nexport default Weather;","import \"./App.css\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      description: \"\",\n      error: false,\n      icon: undefined,\n      location: undefined,\n      main: undefined,\n      temp: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n    };\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      const req = await fetch(\n        `https://orient.pythonanywhere.com/openweathermap/weather?q=${city},${country}`\n      );\n\n      const res = await req.json();\n\n      console.log(res);\n\n      this.setState({\n        description: res.weather[0].description.toUpperCase(),\n        error: false,\n        icon: res.weather[0].icon,\n        location: res.name + \", \" + res.sys.country,\n        main: res.weather[0].main,\n        temp: res.main.temp + \"\\u00B0\",\n        temp_max: res.main.temp_max + \"\\u00B0\",\n        temp_min: res.main.temp_min + \"\\u00B0\",\n      });\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Weather\n          description={this.state.description}\n          error={this.state.error}\n          icon={this.state.icon}\n          location={this.state.location}\n          main={this.state.main}\n          temp={this.state.temp}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n        />\n        <Form error={this.state.error} getWeather={this.getWeather} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}